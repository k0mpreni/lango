package courses

import (
	"lango/cmd/web/view/layout"
	"lango/internal/database/domain"
	"time"
)

type layoutOpts struct {
	backBtn   bool
	createBtn bool
}

templ CourseLayout(title string, opts layoutOpts) {
	@layout.Base(true, title) {
		<section class="container mx-auto bg-base-200">
			<div class="relative  px-4 grid grid-cols-3 items-center gap-4">
				if opts.backBtn {
					<a href="/courses" title="Courses" class="btn btn-ghost btn-square justify-self-end"><i class="fa-solid fa-arrow-left"></i></a>
				}
				<h1 class="text-2xl col-start-2 justify-self-center">{ title }</h1>
				if opts.createBtn {
					<a href="/courses/create" title="Create a course" class="btn btn-success btn-circle col-start-3 justify-self-end"><i class="fa-solid fa-plus"></i></a>
				}
			</div>
			<div class="flex flex-col items-center" id="courses">
				{ children... }
			</div>
		</section>
	}
}

templ CoursesList(courses []domain.Course) {
	@CourseLayout("Courses", layoutOpts{createBtn: true}) {
		if len(courses) > 0 {
			<div class="gap-2 flex flex-wrap items-center justify-center">
				for i, course := range courses {
					<div class="collapse collapse-arrow bg-base-100">
						<input
							type="radio"
							name="my-accordion-2"
							if i == 0 {
								checked="checked"
							}
						/>
						<div class="collapse-title font-medium">
							<div>
								<h2 class="text-xl">{ course.Title }</h2>
								<h3>Course date: { course.Date.Format("1 Jan 2006 at 15h4") } </h3>
							</div>
						</div>
						<div class="collapse-content">
							<p>{ course.Description } </p>
							if course.Completed {
								<button disabled class="btn btn-disabled" title="Finished course">Finished</button>
							} else if course.Canceled {
								<button disabled class="btn btn-disabled" title="Course Canceled">Canceled</button>
							} else {
								<a href={ templ.URL("/courses/join/" + course.Id.String()) } class="btn btn-accent" title="Join">Join</a>
							}
						</div>
					</div>
				}
			</div>
		} else {
			<div class="flex flex-col gap-4 w-full max-w-xl">
				<p>You don't have any courses yet</p>
				<div>
					<a href="/courses/join" hx-swap="innerHTML" hx-target="#courses" class="btn btn-accent" title="Join a course">Join a course</a>
					<a href="/courses/create" class="btn btn-success" title="Create a course">Create a course</a>
				</div>
			</div>
		}
	}
}

type CourseFormErrors struct {
	Title       string
	Description string
	Student     string
	Date        string
}

type CourseForm struct {
	Title        string
	Description  string
	StudentEmail string
	Date         time.Time
}

templ CreateCourse(course CourseForm, errors CourseFormErrors) {
	@CourseLayout("Create Course", layoutOpts{backBtn: true}) {
		<div class="py-10 sm:py-16 mx-auto px-4 sm:px-6 lg:px-8 bg-base-200">
			<form hx-post="/course/create">
				<label class="form-control w-full">
					<div class="label">
						<span class="label-text">Email</span>
					</div>
					<input type="text" name="title" value={ course.Title } required placeholder="Mathematics 101" class="input input-bordered w-full"/>
					if len(errors.Title) > 0 {
						<div class="label">
							<span class="label-text-alt text-error">{ errors.Title }</span>
						</div>
					}
				</label>
				<label class="form-control w-full">
					<div class="label">
						<span class="label-text">Description</span>
					</div>
					<textarea name="description" value={ course.Description } required placeholder="Description of the course" class="textarea textarea-bordered textarea-lg w-full max-w-xs"></textarea>
					if len(errors.Description) > 0 {
						<div class="label">
							<span class="label-text-alt text-error">{ errors.Description }</span>
						</div>
					}
				</label>
				<label class="form-control w-full">
					<div class="label">
						<span class="label-text">Student Email</span>
					</div>
					<input type="email" name="student" value={ course.StudentEmail } required placeholder="Student Email" class="input input-bordered w-full"/>
					if len(errors.Student) > 0 {
						<div class="label">
							<span class="label-text-alt text-error">{ errors.Student }</span>
						</div>
					}
				</label>
				<label class="form-control w-full">
					<div class="label">
						<span class="label-text">Date</span>
					</div>
					<input type="date" name="date" value={ course.Date.Format("2006-01-02") } required placeholder="Mathematics 101" min={ time.Now().Format("2006-01-02") } class="input input-bordered w-full"/>
					if len(errors.Date) > 0 {
						<div class="label">
							<span class="label-text-alt text-error">{ errors.Date }</span>
						</div>
					}
				</label>
				<button type="submit" class="w-full btn btn-primary">Create</button>
			</form>
		</div>
	}
}

templ JoinCourse(course domain.Course) {
	@CourseLayout("Join Course", layoutOpts{backBtn: true, createBtn: true}) {
		<div class="py-10 sm:py-16 mx-auto px-4 sm:px-6 lg:px-8 bg-base-200">
			<h1 class="text-2xl">{ course.Title }</h1>
			<div>
				<p>{ course.Id.String() }</p>
				<p>{ course.Description }</p>
				<p>{ course.Date.Format("1 Jan 2006 at 15h4") }</p>
			</div>
		</div>
	}
}
